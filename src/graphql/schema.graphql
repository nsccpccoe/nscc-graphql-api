type Query {
  metadata: MetaData!
}

type MetaData {

  "Name of a Server Owner"
  name: StringNonEmpty!

  "API Version"
  version: StringNonEmpty!

  "Last Deployment Time"
  buildAt: StringNonEmpty!

  "Last Deployment Platform"
  platform: StringNonEmpty!
}

type Image {
  light: URL!
  dark: URL!
}

enum LinkTypeEnum {
  _self
  _blank
  _parent
  _top
}

type Link {
  displayText: StringNonEmpty!
  href: URL!
  target: LinkTypeEnum!
}

type EventSponsor {
  id: ID!
  displayName: StringNonEmpty!
  shortName: StringNonEmpty!
  logo: Image!
  links: [Link!]!
  coverImage: Image!
}

type EventHost {
  id: ID!
  displayName: StringNonEmpty!
  shortName: StringNonEmpty!
  logo: Image!
  coverImage: Image!
  links: [Link!]!
}

enum Gender {
  Male
  Female
  Other
}

type Participant {
  id: ID!
  email: Email!
  displayName: StringNonEmpty
  phoneNumber: StringNonEmpty
  gender: Gender
  dob: DatePast
  photoURL: URL
  graduationYear: Int
  collegeName: StringNonEmpty
  collegeBranch: StringNonEmpty
  collegeDivision: CharUppercase
  prn: StringNonEmpty
  rollNumber: StringNonEmpty
  links: [Link!]!
}

type EventHostHead {
  id: ID!
  displayName: StringNonEmpty!
  description: StringNonEmpty!
  signature: Image!
}

type Event {
  id: ID!
  title: StringNonEmpty!
  subtitle: StringNonEmpty!
  description: StringNonEmpty!
  startAt: Date!
  endAt: Date!
  featured: Boolean!
  coverImage: Image!
  hosts: [EventHost!]!
  sponsors: [EventSponsor!]!
  landingPage: Link!
  registration: Link!
  community: Link!
}

enum EventCertificateType {
  Achievement
  Participation
  Appreciation
  Completion
}

type EventCertificate {
  id: ID!
  type: EventCertificateType!
  event: Event!
  participant: Participant!
  signatures: [EventHostHead!]!
  verifyURL: Link!
  downloadURL: Link!
}